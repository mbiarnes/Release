release 6.2.0.Beta2..:
++++++++++++++++++++

PREPARATION..: 03.09.2014
**************
xx. > Alert the dev mailing list and the IRC channel that releaseing starts
xx. > check if a new version of UF and JBos ip-bom is needed
xx. > mkdir /home/kiereleaseuser/Release/6.2.0.Beta2
xx. > mkdir /home/kiereleaseuser/Release/6.2.0.Beta2/droolsjbpm-uber-distribution
xx. > mkdir /home/kiereleaseuser/Release/6.2.0.Beta2/failedUnitTests
xx. > cd /home/kiereleaseuser/droolsjbpm (change directory to reps)
xx. > stop all JBoss and Tomcat instances and crontab-jobs on hp-dl380pg8-01.lab.eng.brq.redhat.com
xx. > stop all build jobs in crontab of jbpm-master-build and jbpm-6-0-build
xx. > remove all /tmp/*.jar to prevent false alarms when executing the unit tests
xx. > remove .m2/repository/org/  drools/ + kie/ + guvnor/ + optaplanner/ + jboss/ + jbpm/
xx. > gitall checkout master
xx. > gitall pull --rebase origin master (fetches all updates of all reps from origin)
xx. > mvnall clean install -DskipTests (without tests and -Dfull) to check if everything compiles
xx. > gitall checkout -b r6.2.0.Beta2 (create a local copy of master for continuing)
xx. > mvnallCleanTests (executes sh /home/kiereleaseuser/droolsjbpm/droolsjbpm-build-bootstrap/script/mvn-all.sh clean install -Dfull -Dmaven.test.failure.ignore=true > testResult.txt )
xx. > sh /home/kiereleaseuser/daily-build/releases/scripts/01_copyArtifactsAndFailedUnitTests.sh with 6.2.0.Beta2 as new release name, droolsjbpm as artifacts source, prod-6.2.x.GA.x-2014.08.08 as directory to delete
      and master as path where the artifacts have to be stored
xx. > cherry picked:

      https://github.com/droolsjbpm/guvnor/commit/7b78fda4d1e3112f7db2f994172e6c59ccd796db
      xx. > cd guvnor
      xx. > git checkout master
      xx. > git pull --rebase origin master
      xx. > git log -3 (checks if commit 7b78fda4d1e3112f7db2f994172e6c59ccd796db is on master)
      xx. > git checkout r6.2.0.Beta2
      xx. > git cherry-pick -x 7b78fda4d1e3112f7db2f994172e6c59ccd796db
      xx. > mvn clean install -Dfull -DskipTests (to see if everything builds)

      https://github.com/droolsjbpm/kie-wb-common/commit/9b714afd3da3a855b40268b2d33dfa9fef5da11c
      xx. > cd kie-wb-common
      xx. > git checkout master
      xx. > git pull --rebase origin master
      xx. > git log -3 (checks if commit 9b714afd3da3a855b40268b2d33dfa9fef5da11c is on master)
      xx. > git checkout r6.2.0.Beta2
      xx. > git cherry-pick -x 9b714afd3da3a855b40268b2d33dfa9fef5da11c
      xx. > mvn clean install -Dfull -DskipTests (to see if everything builds)

      https://github.com/droolsjbpm/droolsjbpm-knowledge/commit/655aa7ce2
      xx. > cd droolsjbpm-knowledge
      xx. > git checkout master
      xx. > git pull --rebase origin master
      xx. > git log -3 (checks if commit 655aa7ce20fd850285e0fcc44a39655e94c52dd1 is on master)
      xx. > git checkout r6.2.0.Beta2
      xx. > git cherry-pick -x 655aa7ce20fd850285e0fcc44a39655e94c52dd1
      xx. > mvn clean install -Dfull -DskipTests (to see if everything builds)

      https://github.com/droolsjbpm/jbpm/commit/1a5f20a0550a90e4245a0c3794aace7abb44a12d
      xx. > cd jbpm
      xx. > git checkout master
      xx. > git pull --rebase origin master
      xx. > git log -3 (checks if commit 1a5f20a0550a90e4245a0c3794aace7abb44a12d is on master)
      xx. > git checkout r6.2.0.Beta2
      xx. > git cherry-pick -x 1a5f20a0550a90e4245a0c3794aace7abb44a12d
      xx. > find /tmp -maxdepth 1 -user `whoami` -exec rm -rf {} \; (to delete all old garbage since the unit tests will be executed)
      xx. > mvn clean install -Dfull -Dmaven.test.failure.ignore=true > testResult.txt (to see if everything builds and executing the unit tests)
      xx. > check testResults.txt to se which tests failed

xx. > cp /var/jbpm-artifacts/master/6.2.0.Beta2/failedUnitTests/* /home/kiereleaseuser/Release/6.2.0.Beta2/failedUnitTests (to save failed unit tests)
xx. > copy all failed Unit Tests from jbpm to /home/kiereleaseuser/Release/6.2.0.Beta2/failedUnitTests
xx. > cd dashboard-builder
xx. > mvn clean install -Dfull -DskipTests (to build artifacts again with the change of the cherry picks)
xx. > cd jbpm-dashboard
xx. > mvn clean install -Dfull -DskipTests (to build artifacts again with the change of the cherry picks)
xx. > cd kie-wb-distribution
xx. > mvn clean install -Dfull -DskipTests (to build artifacts again with the change of the cherry picks)
xx. > sh /home/kiereleaseuser/daily-build/releases/scripts/01_copyArtifactsAndFailedUnitTests.sh with 6.2.0.Beta2 as new release name, droolsjbpm as artifacts source 6.2.0.Beta2 as directory to delete
      and master as path where the artifacts have to be stored
xx. > cp /home/kiereleaseuser/Release/6.2.0.Beta2/failedUnitTests/* /var/jbpm-artifacts/master/6.2.0.Beta2/failedUnitTests (copy all failedUnittests)


Re- releasing: 05.09.2014..:
xx. > gitall checkout master
xx. > gitall pull --rebase origin master (fetches all updates of all reps from origin)
xx. > mvnall clean install -DskipTests (without tests and -Dfull) to check if everything compiles
xx. > gitall checkout -b r6.2.0.Beta2 (create a local copy of master for continuing)
xx. > mvnallCleanTests (executes sh /home/kiereleaseuser/droolsjbpm/droolsjbpm-build-bootstrap/script/mvn-all.sh clean install -Dfull -Dmaven.test.failure.ignore=true > testResult.txt )
xx. > sh /home/kiereleaseuser/daily-build/releases/scripts/01_copyArtifactsAndFailedUnitTests.sh with 6.2.0.Beta2 as new release name, droolsjbpm as artifacts source 6.2.0.Beta2 as directory to delete
      and master as path where the artifacts have to be stored
xx. > cp /home/kiereleaseuser/Release/6.2.0.Beta2/failedUnitTests/* /var/jbpm-artifacts/master/6.2.0.Beta2/failedUnitTests (copy all failedUnittests)

08-09-2014..:
xx. > sh /home/kiereleaseuser/droolsjbpm/droolsjbpm-build-bootstrap/script/release/update-version-all.sh 6.2.0-SNAPSHOT 6.2.0.Beta2 6.2.0-SNAPSHOT 6.2.0.Beta2
xx. > mvnallClean (to clean all projects and get rid of /target)
xx. > check if all versions have been updated on master to 6.2.0.Beta2
xx. > mvnallCleanInstall (checks if everything builds after version upgrade to 6.2.0.Beta2)
xx. > sh /home/kiereleaseuser/daily-build/releases/scripts/01_copyArtifactsAndFailedUnitTests.sh with 6.2.0.Beta2 as new release name, droolsjbpm as artifacts source, 6.2.0.Beta2 as directory to delete
      and master as path where the artifacts have to be stored (this time only the artifacts will be copied)
xx. > cp -r /home/kiereleaseuser/droolsjbpm/droolsjbpm-build-distribution/droolsjbpm-uber-distribution/target/droolsjbpm-uber-distribution-6.2.0.Beta2/docs_jboss_org /home/kiereleaseuser/Release/6.2.0.Beta2/droolsjbpm-uber-distribution
xx. > cp -r /home/kiereleaseuser/droolsjbpm/droolsjbpm-build-distribution/droolsjbpm-uber-distribution/target/droolsjbpm-uber-distribution-6.2.0.Beta2/download_jboss_org /home/kiereleaseuser/Release/6.2.0.Beta2/droolsjbpm-uber-distribution
xx. > cp /home/kiereleaseuser/droolsjbpm/kie-wb-distributions/kie-drools-wb/kie-drools-wb-distribution/target/kie-drools-wb-distribution-6.2.0.Beta2.zip /home/kiereleaseuser/Release/6.2.0.Beta2/droolsjbpm-uber-distribution/download_jboss_org/6.2.0.Beta2

09.09.2014..:
xx. > gitall add . (adds all modified files on master and brings them in the staging area)
xx. > gitall status (to review on master if some files/directories shouldn't be added)
xx. > gitall commit -m "upgrade to new version: 6.2.0.Beta2"
xx. > gitall tag -l : checks  all the tags (to check which tags are existing)
xx. > gitall tag -a 6.2.0.Beta2 -m "Tagging 6.2.0.Beta2"
xx. > create new versions on JIRA (Drools, Guvnor, Optaplanner and jBPM) since the local branch is created - "without release date"
xx. > go to Nexus, menu item Staging repositories, drop all your old staging repositories
xx. > mvnallCleanDeploy (executes sh /home/kiereleaseuser/droolsjbpm/droolsjbpm-build-bootstrap/script/mvn-all.sh clean deploy -Dfull -DskipTests" --> deploys everything to Nexus - (<:> hrs))
xx. > SANITY CHECKS: tests & deployment on fifferent application servers
xx. > gitall push origin 6.2.0.Beta2 [pushes the tag 6.2.0.Beta2 to the blessed repository]
xx. > staging repository on Nexus: [jboss-releases-staging-profile-<3664>]
xx. > close the repository on Nexus : close ( as discription edit the realease name [droolsjbpm 6.2.0.Beta1] )
xx. > gitall tag -l : checks  all the tags


16.09.2014..:
xx. > release repository on Nexus
xx. > enter release date on JIRA (Drools, Guvnor, Optaplanner and jBPM) --> <02/08/2014>
xx. > mail to bsig and ryan zhang that this release is done
xx. > upload zips and docs to http://filemngmt.jboss.org

17.09.2014
xx. > sh droolsjbpm-build-bootstrap/script/release/create_filemgmt_links.sh 6.2.0.Beta1: updates link to the right directories on filemngmt.jboss.org
xx. > mvnallClean (to clen all projects and delete the /targets to save disk space)
xx. > gitall checkout master : switch back from release branch to master branch

























